
Public_Room street "Las Vegas Blvd."
 with
  ! This is the starting location
  initial [ hh;
   if (self hasnt visited) {
    CurrentTime();
    hh = date_array-->4;
    print "It's a ";
    if ((hh >= 6) && (hh < 12)) print "beautiful morning";
    else if ((hh >= 12) && (hh < 18)) print "hot afternoon";
    else if ((hh >= 18) && (hh < 21)) print "warm evening";
    else print "cool night";
    if (FlagOff(PLAYER_KNOWS_ABOUT_FLUFFY)) " and I'm in the middle of Las Vegas! I look up and down the street and think to myself how exciting it is to be here.";
    else " but I need to focus on getting Fluffy!";
   }
   rtrue;
  ],
  description [;
   print "I can go ";
   if (lobby has visited) "back into the hotel.";
   "south.";
  ],
  s_to lobby;

Public_Room lobby "Lobby"
 with
  initial [;
   if (self hasnt visited) print "This is the lobby of the Timbuktu Hotel and Casino, the nicest place I could afford, it's really not that bad, but it's so-o-o Las Vegas.^^";
   print "The man behind the front desk says,";
   ! style_Note = Igor's voice
   glk_set_style(style_Note);
  print " ~Welcome to the Timbuktu!~";
   glk_set_style(style_Normal);
   if(self hasnt visited) " While I was checking in, I chatted with him and found out his name is Igor and he's Ukrainian.";
   else new_line;
   rtrue;
  ],
  description [;
   print "I can go ";
   if (street has visited) print "back out to the street";
   else print "north";
   print ", ";
   if (elevator_vestibule has visited) print "to the elevator vestibule";
   else print "south";
   print " or ";
   if (gift_shop has visited) "into the gift shop.";
   else "west.";
  ],
  n_to street,
  s_to elevator_vestibule,
  w_to gift_shop;

Public_Room gift_shop "Gift Shop"
 with
  initial [;
    if (self hasnt visited) "This is the gift shop, full of tacky, over-priced dust collectors made in China.";
    rtrue;
  ],
  description [;
   print "From here, I can go ";
   if (lobby has visited) print "back to the main lobby";
   else print "east";
   print ", ";
   if (elevator_vestibule has visited) print "to the elevator vestibule";
   else print "south-east";
   print " or ";
   if (casino has visited) "into the casino.";
   else "south.";
  ],
  e_to lobby,
  se_to elevator_vestibule,
  s_to casino;

Public_Room casino "Casino"
 with
  initial [;
   if (self hasnt visited) "Wow, this could be the worst ~casino~ in the world. There's only one slot machine!";
   rtrue;
  ],
  description [;
   print "I can go ";
   if (elevator_vestibule has visited) {
    print "to the elevator vestibule";
    if ((gift_shop has visited) && (restaurant has visited)) ", the gift shop or the restaurant.";
   }
   else print "east";
   print ", ";
   if (gift_shop has visited) print "to the gift shop";
   else print "north";
   print " or ";
   if (restaurant has visited) "to the restaurant.";
   else "south.";
  ],
  e_to elevator_vestibule,
  n_to gift_shop,
  s_to restaurant;

Object -> slot_machine "slot machine"
 with
  name 'slot' 'machine',
  description "It has a lot of flashing lights.",
  before [;
   Receive:
    if (noun == token) {
     remove token;
     "There's even more flashing lights and beeping sounds for a few seconds, then nothing. Well, that wasn't much fun!";
    }
    "You're not really clear on how a slot machine works, are you?";
  ]
 has scenery proper;

Public_Room restaurant "Restaurant"
 with
  initial [;
   if (self hasnt visited) "This is the restaurant, it actually looks like a nice place, lots of people enjoying their meals, but nothing very interesting for me right now.";
   rtrue;
  ],
  description [;
   print "I can go ";
   if (elevator_vestibule has visited) {
    print "to the elevator vestibule";
   if ((casino has visited) && (nightclub has visited)) ", the restaurant or the nightclub.";
    }
   else print "north-east";
   print ", ";
   if (casino has visited) print "to the casino";
   else print "north";
   print " or ";
   if (nightclub has visited) "to the nightclub.";
   else "east.";
  ],
  ne_to elevator_vestibule,
  n_to casino,
  e_to nightclub;

Public_Room nightclub "Nightclub"
 with
  initial [;
   if (self hasnt visited) "This is a nightclub, it's loud and crowded with all kinds of seedy people, my favourite kind of place.";
   rtrue;
  ],
  description [;
   print "I can go ";
   if (elevator_vestibule has visited) {
    print "to the elevator vestibule";
    if (restaurant has visited) " or the restaurant.";
   }
   else print "north-east";
   print " or ";
   if (restaurant has visited) "to the restaurant";
   else "west";
  ],
  n_to elevator_vestibule,
  w_to restaurant;

Public_Room elevator_vestibule "Elevator Vestibule"
 with
  initial [;
   if (self hasnt visited) "This is the elevator vestibule, the hub of the hotel, from here I can get to any other room on the ground floor.";
   rtrue;
  ],
  description "The elevator's to the east.",
  e_to [;
   if (elevator_doors hasnt open) "The elevator's at a different floor.";
   return elevator;
  ],
  floor_number 1,
  n_to lobby,
  nw_to gift_shop,
  w_to casino,
  sw_to restaurant,
  s_to nightclub,
  d_to [;
   if (master_key notin player) {
    print "The door says it's for authorized hotel staff only.";
    if (FlagOn(PLAYER_KNOWS_MESSAGE)) " If I had some sort of master key, maybe I could get down there and rescue Fluffy!";
    rtrue;
   }
   print "I used the master key to go down to the basement.^";
   return basement;
  ];

Button call_elevator_button "button" elevator_vestibule
 with
  name 'button',
  description [;
   print "The button has ";
   if (location == second_floor or third_floor or fourth_floor) print "arrows";
   else print "an arrow";
   print " pointing ";
   if (location == elevator_vestibule or second_floor or third_floor or fourth_floor) print "up";
   if (location == second_floor or third_floor or fourth_floor) print " and ";
   if (location == second_floor or third_floor or fourth_floor or fifth_floor) print "down";
   ".";
  ],
  found_in elevator_vestibule second_floor third_floor fourth_floor fifth_floor,
  before [;
   ! Call the elevator
   Push, Touch:
    if (elevator.floor_number == location.floor_number) "Nothing happens.";
    elevator.floor_number = location.floor_number;
    give elevator_doors open;
  ];

Object elevator_doors "elevator doors"
 with
  name 'elevator' 'doors',
  !initial [;
  ! if (location ~= elevator) "To the east is an elevator.";
  ! "The elevator is ready.";
  !],
  description [;
   print "The elevator doors are ";
   if (self has open) "open.";
   "closed. Next to the elevator, you see a button.";
  ],
  found_in elevator_vestibule second_floor third_floor fourth_floor fifth_floor elevator,
  door_to [;
   if (location ofclass Hall) return elevator;
   switch (elevator.floor_number) {
    1: return elevator_vestibule;
    2: return second_floor;
    3: return third_floor;
    4: return fourth_floor;
    5: return fifth_floor;
   }
  ],
  door_dir [;
   if (location ofclass Hall) return e_to;
   return w_to;
  ]
 has static door scenery ~open;

Object elevator "Elevator" class Public_Room
 with
  name 'elevator',
  description [;
   if (FlagOn(PLAYER_KNOWS_ABOUT_FLUFFY) && FlagOff(PLAYER_KNOWS_ABOUT_RUSSIANS)) TriggerFlashback();
   print "I'm in the hotel's main elevator, on the ";
   switch (self.floor_number) {
    1: print "ground";
    2: print "second";
    3: print "third";
    4: print "fourth";
    5: print "fifth";
   }
   " floor.";
  ],
  floor_number 3,
  before [;
   Exit: <<Go w_obj>>;
  ],
  w_to [;
   switch (self.floor_number) {
    1: return elevator_vestibule;
    2: return second_floor;
    3: return third_floor;
    4: return fourth_floor;
    5: return fifth_floor;
   }
  ]
 has enterable;

Bunch_Of_Buttons elevator_buttons "buttons" elevator
 with
  name 'buttons' 'panel',
  initial "There is a panel with several buttons.",
  description "The buttons are labelled G, 2, 3, 4 and 5."
 has pluralname;

Elevator_Button ground_button "ground button" elevator_buttons
 with
  name 'g//' 'ground' 'button',
  destination_floor 1;

Elevator_Button button2 "second floor button" elevator_buttons
 with
  name '2//' 'button',
  destination_floor 2;

Elevator_Button button3 "third floor button" elevator_buttons
 with
  name '3//' 'button',
  destination_floor 3;

Elevator_Button button4 "fourth floor button" elevator_buttons
 with
  name '4//' 'button',
  destination_floor 4;

Elevator_Button button5 "fifth floor button" elevator_buttons
 with
  name '5//' 'button',
  destination_floor 5;

Object stairs "stairs"
 with
  name 'stairs' 'door',
  initial [;
   if (location == elevator_vestibule or fifth_floor) "Through a glass door, I see a set of stairs.";
   rtrue;
  ],
  description [;
   print "The stairs go ";
   if (location == basement or fifth_floor) "up.";
   "down.";
  ],
  ! All the logic for using the stairs is in the rooms
  found_in basement elevator_vestibule fifth_floor roof
 has static pluralname;

Hall second_floor "Second Floor"
 with
  name 'second' 'floor' 'hall',
  floor_number 2,
  se_to door_201,
  s_to door_202,
  sw_to door_203,
  w_to door_204,
  nw_to door_205,
  n_to door_206,
  ne_to door_207;

Hotel_Room_Door door_201 "Door 201"
 with
  name '201' 'room' 'door' '1//',
  found_in second_floor room_201,
  to_room room_201,
  to_hall second_floor,
  dir_in se_to,
  dir_out nw_to;

Hotel_Room room_201 "Room 201"
 with
  nw_to door_201,
  door_out door_201,
  floor_number 2,
  room_number 201;

Hotel_Room_Door door_202 "Door 202"
 with
  name '202' 'room' 'door' '2//',
  found_in second_floor room_202,
  to_room room_202,
  to_hall second_floor,
  dir_in s_to,
  dir_out n_to,
  before [;
   Unlock, Open, Go:
    if ((location ofclass Hall) && (parent(britney) ~= location)) "I shouldn't go in there alone.";
  ];

Hotel_Room room_202 "Room 202"
 with
  n_to door_202,
  door_out door_202,
  floor_number 2,
  room_number 202;

General_Object -> computer "computer"
 with
  name 'computer',
  initial [;
   if (FlagOff(PLAYER_HAS_SEEN_MESSAGE)) "There's a computer here and it's on!";
   rtrue;
  ],
  description [;
   if (FlagOff(PLAYER_HAS_SEEN_MESSAGE)) {
    SetFlag(PLAYER_HAS_SEEN_MESSAGE);
    print "There's a message on the computer that I can't understand! It reads:^";
   }
   else print "The message says:^";
   glk_set_style(style_Preformatted);
   print (char)ucVe, (char)lcEl, (char)lcA, (char)lcDe, ", ";
   print (char)lcShch, (char)lcYe, (char)lcEn, (char)lcO, (char)lcKa, " ";
   print (char)lcVe, " ";
   print (char)lcPe, (char)lcO, (char)lcDe, (char)lcVe, (char)lcA, (char)lcEl, (char)lcYe, ".^";
   print (char)ucEs, (char)lcYe, (char)lcEr, (char)lcGe, (char)lcYe, (char)lcY, "^";
   glk_set_style(style_Normal);
  ]
 has static;

Hotel_Room_Door door_203 "Door 203"
 with
  name '203' 'room' 'door' '3//',
  found_in second_floor room_203,
  to_room room_203,
  to_hall second_floor,
  dir_in sw_to,
  dir_out ne_to;

Hotel_Room room_203 "Room 203"
 with
  ne_to door_203,
  door_out door_203,
  floor_number 2,
  room_number 203;

Hotel_Room_Door door_204 "Door 204"
 with
  name '204' 'room' 'door' '4//',
  found_in second_floor room_204,
  to_room room_204,
  to_hall second_floor,
  dir_in w_to,
  dir_out e_to;

Hotel_Room room_204 "Room 204"
 with
  e_to door_204,
  door_out door_204,
  floor_number 2,
  room_number 204;

Hotel_Room_Door door_205 "Door 205"
 with
  name '205' 'room' 'door' '5//',
  found_in second_floor room_205,
  to_room room_205,
  to_hall second_floor,
  dir_in nw_to,
  dir_out se_to;

Hotel_Room room_205 "Room 205"
 with
  se_to door_205,
  door_out door_205,
  floor_number 2,
  room_number 205;

Hotel_Room_Door door_206 "Door 206"
 with
  name '206' 'room' 'door' '6//',
  found_in second_floor room_206,
  to_room room_206,
  to_hall second_floor,
  dir_in n_to,
  dir_out s_to;

Hotel_Room room_206 "Room 206"
 with
  s_to door_206,
  door_out door_206,
  floor_number 2,
  room_number 206;

Hotel_Room_Door door_207 "Door 207"
 with
  name '207' 'room' 'door' '7//',
  found_in second_floor room_207,
  to_room room_207,
  to_hall second_floor,
  dir_in ne_to,
  dir_out sw_to;

Hotel_Room room_207 "Room 207"
 with
  sw_to door_207,
  door_out door_207,
  floor_number 2,
  room_number 207;

Hall third_floor "Third Floor"
 with
  name 'third' 'floor' 'hall',
  floor_number 3,
  se_to door_301,
  s_to door_302,
  sw_to door_303,
  w_to door_304,
  nw_to door_305,
  n_to door_306,
  ne_to door_307;

Hotel_Room_Door door_301 "Door 301"
 with
  name '301' 'room' 'door' '1//',
  found_in third_floor room_301,
  to_room room_301,
  to_hall third_floor,
  dir_in se_to,
  dir_out nw_to,
  before [;
   Unlock, Open, Go:
    "There's a ~Do Not Disturb~ sign on the door.";
  ];

Hotel_Room room_301 "Room 301"
 with
  nw_to door_301,
  door_out door_301,
  floor_number 3,
  room_number 301;

Hotel_Room_Door door_302 "Door 302"
 with
  name '302' 'room' 'door' '2//',
  found_in third_floor room_302,
  to_room room_302,
  to_hall third_floor,
  dir_in s_to,
  dir_out n_to;

Hotel_Room room_302 "Room 302"
 with
  n_to door_302,
  door_out door_302,
  floor_number 3,
  room_number 302;

Hotel_Room_Door door_303 "Door 303"
 with
  name '303' 'room' 'door' '3//',
  found_in third_floor room_303,
  to_room room_303,
  to_hall third_floor,
  dir_in sw_to,
  dir_out ne_to;

Hotel_Room room_303 "Room 303"
 with
  ne_to door_303,
  door_out door_303,
  floor_number 3,
  room_number 303;

Hotel_Room_Door door_304 "Door 304"
 with
  name '304' 'room' 'door' '4//',
  found_in third_floor room_304,
  to_room room_304,
  to_hall third_floor,
  dir_in w_to,
  dir_out e_to;

Hotel_Room room_304 "Room 304"
 with
  e_to door_304,
  door_out door_304,
  floor_number 3,
  room_number 304;

Hotel_Room_Door door_305 "Door 305"
 with
  name '305' 'room' 'door' '5//',
  found_in third_floor room_305,
  to_room room_305,
  to_hall third_floor,
  dir_in nw_to,
  dir_out se_to;

Hotel_Room room_305 "Room 305"
 with
  se_to door_305,
  door_out door_305,
  floor_number 3,
  room_number 305;

Hotel_Room_Door door_306 "Door 306"
 with
  name '306' 'room' 'door' '6//',
  found_in third_floor room_306,
  to_room room_306,
  to_hall third_floor,
  dir_in n_to,
  dir_out s_to;

Hotel_Room room_306 "Room 306"
 with
  s_to door_306,
  door_out door_306,
  floor_number 3,
  room_number 306;

Hotel_Room_Door door_307 "Door 307"
 with
  name '307' 'room' 'door' '7//',
  found_in third_floor room_307,
  to_room room_307,
  to_hall third_floor,
  dir_in ne_to,
  dir_out sw_to;

Hotel_Room room_307 "Room 307"
 with
  sw_to door_307,
  door_out door_307,
  floor_number 3,
  room_number 307;

Hall fourth_floor "Fourth Floor"
 with
  name 'fourth' 'floor' 'hall',
  floor_number 4,
  se_to door_401,
  s_to door_402,
  sw_to door_403,
  w_to door_404,
  nw_to door_405,
  n_to door_406,
  ne_to door_407;

Hotel_Room_Door door_401 "Door 401"
 with
  name '401' 'room' 'door' '1//',
  found_in fourth_floor room_401,
  to_room room_401,
  to_hall fourth_floor,
  dir_in se_to,
  dir_out nw_to;

Hotel_Room room_401 "Room 401"
 with
  nw_to door_401,
  door_out door_401,
  floor_number 4,
  room_number 401;

Hotel_Room_Door door_402 "Door 402"
 with
  name '402' 'room' 'door' '2//',
  found_in fourth_floor room_402,
  to_room room_402,
  to_hall fourth_floor,
  dir_in s_to,
  dir_out n_to;

Hotel_Room room_402 "Room 402"
 with
  n_to door_402,
  door_out door_402,
  floor_number 4,
  room_number 402;

Hotel_Room_Door door_403 "Door 403"
 with
  name '403' 'room' 'door' '3//',
  found_in fourth_floor room_403,
  to_room room_403,
  to_hall fourth_floor,
  dir_in sw_to,
  dir_out ne_to;

Hotel_Room room_403 "Room 403"
 with
  ne_to door_403,
  door_out door_403,
  floor_number 4,
  room_number 403;

Hotel_Room_Door door_404 "Door 404"
 with
  name '404' 'room' 'door' '4//',
  found_in fourth_floor room_404,
  to_room room_404,
  to_hall fourth_floor,
  dir_in w_to,
  dir_out e_to;

Hotel_Room room_404 "Room 404"
 with
  e_to door_404,
  door_out door_404,
  floor_number 4,
  room_number 404;

Hotel_Room_Door door_405 "Door 405"
 with
  name '405' 'room' 'door' '5//',
  found_in fourth_floor room_405,
  to_room room_405,
  to_hall fourth_floor,
  dir_in nw_to,
  dir_out se_to;

Hotel_Room room_405 "Room 405"
 with
  se_to door_405,
  door_out door_405,
  floor_number 4,
  room_number 405;

Hotel_Room_Door door_406 "Door 406"
 with
  name '406' 'room' 'door' '6//',
  found_in fourth_floor room_406,
  to_room room_406,
  to_hall fourth_floor,
  dir_in n_to,
  dir_out s_to;

Hotel_Room room_406 "Room 406"
 with
  s_to door_406,
  door_out door_406,
  floor_number 4,
  room_number 406;

Hotel_Room_Door door_407 "Door 407"
 with
  name '407' 'room' 'door' '7//',
  found_in fourth_floor room_407,
  to_room room_407,
  to_hall fourth_floor,
  dir_in ne_to,
  dir_out sw_to;

Hotel_Room room_407 "Room 407"
 with
  sw_to door_407,
  door_out door_407,
  floor_number 4,
  room_number 407;

Hall fifth_floor "Fifth Floor"
 with
  name 'fifth' 'floor' 'hall',
  floor_number 5,
  se_to door_501,
  s_to door_502,
  sw_to door_503,
  w_to door_504,
  nw_to door_505,
  n_to door_506,
  ne_to door_507,
  u_to [;
   if (master_key notin player) "It's for authorized hotel staff only.";
   return roof;
  ];

Hotel_Room_Door door_501 "Door 501"
 with
  name '501' 'room' 'door' '1//',
  found_in fifth_floor room_501,
  to_room room_501,
  to_hall fifth_floor,
  dir_in se_to,
  dir_out nw_to;

Hotel_Room room_501 "Room 501"
 with
  nw_to door_501,
  door_out door_501,
  floor_number 5,
  room_number 501;

Hotel_Room_Door door_502 "Door 502"
 with
  name '502' 'room' 'door' '2//',
  found_in fifth_floor room_502,
  to_room room_502,
  to_hall fifth_floor,
  dir_in s_to,
  dir_out n_to;

Hotel_Room room_502 "Room 502"
 with
  n_to door_502,
  door_out door_502,
  floor_number 5,
  room_number 502;

Hotel_Room_Door door_503 "Door 503"
 with
  name '503' 'room' 'door' '3//',
  found_in fifth_floor room_503,
  to_room room_503,
  to_hall fifth_floor,
  dir_in sw_to,
  dir_out ne_to;

Hotel_Room room_503 "Room 503"
 with
  ne_to door_503,
  door_out door_503,
  floor_number 5,
  room_number 503;

Hotel_Room_Door door_504 "Door 504"
 with
  name '504' 'room' 'door' '4//',
  found_in fifth_floor room_504,
  to_room room_504,
  to_hall fifth_floor,
  dir_in w_to,
  dir_out e_to;

Hotel_Room room_504 "Room 504"
 with
  e_to door_504,
  door_out door_504,
  floor_number 5,
  room_number 504;

Hotel_Room_Door door_505 "Door 505"
 with
  name '505' 'room' 'door' '5//',
  found_in fifth_floor room_505,
  to_room room_505,
  to_hall fifth_floor,
  dir_in nw_to,
  dir_out se_to;

Hotel_Room room_505 "Room 505"
 with
  se_to door_505,
  door_out door_505,
  floor_number 5,
  room_number 505;

Hotel_Room_Door door_506 "Door 506"
 with
  name '506' 'room' 'door' '6//',
  found_in fifth_floor room_506,
  to_room room_506,
  to_hall fifth_floor,
  dir_in n_to,
  dir_out s_to,
  before [;
   Open, Go:
    "The door's locked from the inside.";
  ];

Hotel_Room room_506 "Room 506"
 with
  s_to door_506,
  door_out door_506,
  floor_number 5,
  room_number 506;

Hotel_Room_Door door_507 "Door 507"
 with
  name '507' 'room' 'door' '7//',
  found_in fifth_floor room_507,
  to_room room_507,
  to_hall fifth_floor,
  dir_in ne_to,
  dir_out sw_to;

Hotel_Room room_507 "Room 507"
 with
  sw_to door_507,
  door_out door_507,
  floor_number 5,
  room_number 507;

Room basement "Basement"
 with
  description [;
   if (FlagOff(PLAYER_KNOWS_MESSAGE)) deadflag = 5;
   else deadflag = 6;
  ];

Room roof "Roof"
 with
  initial [;
   if (self hasnt visited) "I used the master key to go up to the roof. Being up here reminds me of that scene from The Hangover! But my weekend is *not* gonna be like that!";
   rtrue;
  ],
  description [ hh;
   CurrentTime();
   hh = date_array-->4;
   print "It's a ";
   if ((hh >= 6) && (hh < 12)) print "beautiful morning";
   else if ((hh >= 12) && (hh < 18)) print "hot afternoon";
   else if ((hh >= 18) && (hh < 21)) print "warm evening";
   else print "cool night";
   print ", and ";
   if (britney in location) print "we're";
   else print "I'm";
   print " on the roof of the hotel.";
   rtrue;
  ],
  d_to fifth_floor;

Disappearing_Object -> token "token"
 class Britney_Object
 with
  name 'token' 'coin',
  initial "Check it out, there's a token over there!",
  description "It looks like a coin but it's not a coin.",
  after [;
   Take: "Cool, it's a shiny gold token.";
  ];

! Might expect 'has talkable' for a phone, but this phone is basically a teleporter ;-)
! Telephone's general means call active
Object telephone "telephone"
 with
  name 'house' 'phone' 'telephone' 'receiver',
  description "It's the hotel's house phone.",
  found_in lobby room_201 room_202 room_203 room_204 room_205 room_206 room_207 room_301 room_302 room_303 room_304 room_305 room_306 room_307 room_401 room_402 room_403 room_404 room_405 room_406 room_407 room_501 room_502 room_503 room_504 room_505 room_506 room_507,
  before [;
   Drop: if (OnPhone()) "Don't be rude, you need to hang up first.";
  ],
  after [;
   Take: "I pick up the receiver and hear a dial tone.";
  ];
